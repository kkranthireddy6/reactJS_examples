const redux = require('redux')
const createStore = redux.legacy_createStore

const BUY_CAKE = 'BUY_CAKE'
const BUY_ICECREAM = 'BUY_ICECREAM'
const buyCake = () => {
    return { type: BUY_CAKE }
}
const buyIceCream = () => {
    return { type: BUY_ICECREAM }
}

const initialState = {
    numOfCakes: 10,
    numOfIceCreams: 10
}
const reducer = (state = initialState, action) => {
    const { type, payload } = action
    switch (type) {
        case 'BUY_CAKE': return {
            ...state,
            numOfCakes: state.numOfCakes - 1
        }

        case 'BUY_ICECREAM': return { 
            ...state,
            numOfIceCreams: state.numOfIceCreams - 1
        }

        default: return state
    }
}

const store = createStore(reducer)
console.log('Initialstate', store.getState())
const unsubscribe = store.subscribe(() => console.log('Changed state Value', store.getState()))
store.dispatch(buyCake())
store.dispatch(buyIceCream())
unsubscribe()
